from PyQt5.uic import loadUi
from PyQt5.QtCore import Qt
from PyQt5.QtWidgets import QWidget
from lib.misc.parse import Parse


class QExploit(QWidget):
    def __init__(self, ui, parent):
        super(QExploit, self).__init__(parent)
        loadUi('./resources/ui/widgets/exploits/{0}.ui'.format(ui), self)
        self.parent = parent
        self.category = None
        self.__exploit = None

        # Connect things
        self.checkBoxVulnerable.stateChanged.connect(self.checkBoxVulnerableStateChanged)

        # Labels
        self.labelAuthor.setTextInteractionFlags(Qt.TextSelectableByMouse)
        self.labelDate.setTextInteractionFlags(Qt.TextSelectableByMouse)
        self.labelTarget.setTextInteractionFlags(Qt.TextSelectableByMouse)
        self.labelDescription.setTextInteractionFlags(Qt.TextSelectableByMouse)
        self.labelDescription.setWordWrap(True)

        self.labelCWE.setTextFormat(Qt.RichText)
        self.labelCWE.setTextInteractionFlags(Qt.TextBrowserInteraction)
        self.labelCWE.setOpenExternalLinks(True)

        self.labelReferences.setTextFormat(Qt.RichText)
        self.labelReferences.setTextInteractionFlags(Qt.TextBrowserInteraction)
        self.labelReferences.setOpenExternalLinks(True)

        # Set verticalLayout. It's resize the widget
        self.setLayout(self.verticalLayout)

    def check(self):
        """This function check all thing that you need before exploit will run"""
        pass

    def checkBoxVulnerableStateChanged(self):
        """This function executes when checkbox changes state"""
        if self.checkBoxVulnerable.isChecked():
            self.parent.addExploitSuccess(self.__exploit)
        else:
            self.parent.removeExploitSuccess(self.__exploit)

    def setCheckBoxVulnerableChecked(self, checked=True):
        """
        This function changes checkbox's state
        :param checked: True or False
        :return: None
        """
        if checked:
            self.checkBoxVulnerable.setCheckState(Qt.Checked)
        else:
            self.checkBoxVulnerable.setCheckState(Qt.Unchecked)

    @property
    def exploit(self):
        """
        Get the exploit
        :return: the exploit
        """
        return self.__exploit

    @exploit.setter
    def exploit(self, exploit):
        """
        Setter the exploit
        :param exploit: the exploit
        :return: None
        """
        self.__exploit = exploit
        self.labelNameExploit.setText(self.__exploit.name)
        self.labelAuthor.setText(self.__exploit.authors)
        self.labelDate.setText(self.__exploit.date)
        self.labelCWE.setText(Parse.CWEToLink(self.__exploit.cwe))
        self.labelTarget.setText(self.__exploit.target)
        self.labelReferences.setText(self.__exploit.references)
        self.labelDescription.setText(self.__exploit.description)
