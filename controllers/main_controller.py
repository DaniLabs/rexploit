from routes.routes import Routes
from views.main_view import MainView
from views.misc.messagebox import MessageBox


class MainController(object):
    def __init__(self):
        self.routes = Routes()
        self.main_view = MainView(self)
        self.project_controller = self.routes.get("Project")
        self.scan_controller = self.routes.get("Scan")
        self.welcome_controller = self.routes.get("Welcome")
        self.vulnerabilities_controller = self.routes.get("Vulnerabilities")

    def start(self):
        self.main_view.show()
        self.main_view.add_widget(self.welcome_controller.get_widget())

    def action_home(self):
        self.main_view.add_widget(self.welcome_controller.get_widget())

    def action_new_project(self):
        if self.project_controller.new_project():
            project_file = self.project_controller.get_project_file()
            self.main_view.set_message_status(self.project_controller.get_message_status())
            self.scan_controller.set_project_file(project_file, True)
            self.welcome_controller.set_project_file(project_file)
        else:
            pass

    def action_open_project(self):
        if self.project_controller.open_project():
            project_file = self.project_controller.get_project_file()
            self.main_view.set_message_status(self.project_controller.get_message_status())
            self.scan_controller.set_project_file(project_file, False)
            self.welcome_controller.set_project_file(project_file)
        else:
            pass

    def action_save(self):
        #TODO action_save. Guardar los cambios realizados
        if self.scan_controller.save_targets():
            MessageBox().information("Save", "All changes save correctly")
        else:
            MessageBox().critical("Error", "An error happened")
        print "action_save"

    def action_vulnerabilities(self):
        if self.vulnerabilities_controller.start():
            print "yes"
            print self.welcome_controller.get_router()
        else:
            print "no"
        #TODO Despues buscar dentro de la carpeta del router las vulnerabilidades disponibles
        print "action_vulnerabilities"

    def action_scan(self):
        self.main_view.add_widget(self.scan_controller.get_widget())

    def action_settings(self):
        #TODO action_settings. Configurar opciones del proyecto. Que opciones.
        print "action_settings"

    def action_about(self):
        #TODO action_about. Mostrar informacion sobre el proyecto, version, autores, licencia, etc...
        print "action_about"
