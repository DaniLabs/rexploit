from lib.io.dbhelper import DBHelper
from lib.io.network import ping
from lib.io.projectfile import ProjectFile
from views.dialog.newprojectview import NewProjectView
from views.misc.filedialog import FileDialog
from views.misc.messagebox import MessageBox


class ProjectController(object):
    def __init__(self):
        self.__projectFile = None
        self.__DBHelper = DBHelper()
        self.__newProjectView = NewProjectView(self)

    def createProject(self, name, ip, location):
        mac, oui, company = self.getInformation(ip)

        self.__projectFile = ProjectFile(location, name)
        self.__projectFile.write("Information", "Name", name)
        self.__projectFile.write("Information", "Location", self.__projectFile.getFileName())
        self.__projectFile.write("Information", "IP", ip)
        self.__projectFile.write("Information", "MAC", mac)
        self.__projectFile.write("Information", "OUI", oui)
        self.__projectFile.write("Information", "Company", company)
        self.__projectFile.write("Information", "Router", None)

    def getInformation(self, ip):
        mac, info = self.__DBHelper.fetchone(ip)

        if not mac and not info:
            mac = oui = company = "Unknown"
        else:
            oui = info[1]
            company = info[2]

        return mac, oui, company

    def getMessageStatus(self):
        return "IP: {0} Location: {1} ".format(self.__projectFile.readValue("Information", "IP"),
                                               self.__projectFile.readValue("Information", "Location"))

    def getProjectFile(self):
        return self.__projectFile

    @staticmethod
    def isAlive(IP):
        return ping(IP)

    def openProject(self):
        fileName = FileDialog.getOpenFileName()
        if fileName:
            try:
                self.__projectFile = ProjectFile(fileName)
                return True
            except Exception as e:
                MessageBox.critical("Error", e.message)
        else:
            return False

    def setProjectFile(self, projectFile):
        self.__projectFile = projectFile

    def showNewProjectView(self):
        value = self.__newProjectView.exec_()

        while value < 0:
            value = self.__newProjectView.exec_()

        if value > 0:
            return True
        elif value == 0:
            return False
