# Imports
from lib.io.dbhelper import DBHelper
from lib.io.projectfile import ProjectFile
from views.dialog.projectview import ProjectView
from views.misc.filedialog import FileDialog
from views.misc.messagebox import MessageBox


class ProjectController(object):
    
    """
        This class is a controller that manages the 'Project View' and all actions that are related with
        project file.
    """

    def __init__(self):
        """Initialize the controller object and all attributes that it needs"""
        self.__projectFile = None
        self.__DBHelper = DBHelper()
        self.__view = ProjectView(self)

    def create(self, name, ip, location):
        """
        Create a project with the params that it receives
        :param name: Project's name
        :param ip: IP Address
        :param location: Path
        :return: None
        """
        mac, info = self.__DBHelper.fetchone(ip)

        if not mac and not info:
            mac = oui = company = "Unknown"
        else:
            oui = info[1]
            company = info[2]

        self.__projectFile = ProjectFile(location, name)
        self.__projectFile.write("Information", "Name", name)
        self.__projectFile.write("Information", "Location", self.__projectFile.getFileName())
        self.__projectFile.write("Information", "IP", ip)
        self.__projectFile.write("Information", "MAC", mac)
        self.__projectFile.write("Information", "OUI", oui)
        self.__projectFile.write("Information", "Company", company)
        self.__projectFile.write("Information", "Router", None)

    def open(self):
        """
        Open a filedialog and get a filename
        :exception: throw a critical MessageBox with the error
        :return: True if filedialog is opened successfully, False otherwise
        """

        fileName = FileDialog.getOpenFileName()
        if fileName:
            try:
                self.__projectFile = ProjectFile(fileName)
                return True
            except Exception as e:
                MessageBox.critical("Error", e.message)
        else:
            return False

    @property
    def projectFile(self):
        """
        Get a project file.
        :return: A project file
        """
        return self.__projectFile

    @projectFile.setter
    def projectFile(self, projectFile):
        """
        Set a project file object
        :param projectFile: a project file object
        :return: None
        """
        self.__projectFile = projectFile

    def show(self):
        """
        Show 'New Project View'
        :return: True if project is create successfully, False otherwise
        """
        value = self.__view.exec_()

        # Errors
        while value < 0:
            value = self.__view.exec_()
        # OK
        if value > 0:
            return True
        # Cancel
        elif value == 0:
            return False
