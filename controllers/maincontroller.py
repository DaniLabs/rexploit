# Imports
from controllers.aboutcontroller import AboutController
from controllers.projectcontroller import ProjectController
from controllers.reportcontroller import ReportController
from controllers.scancontroller import ScanController
from controllers.settingscontroller import SettingsController
from controllers.updatecontroller import UpdateController
from controllers.vulnerabilitiescontroller import VulnerabilitiesController
from views.mainview import MainView
from views.misc.messagebox import MessageBox


class MainController(object):

    """
        This class is the main controller that manages called 'Main View' an the other controllers.
    """

    def __init__(self):
        """Initialize the controller object and all attributes that they need it"""
        self.__view = MainView()
        self.__projectController = ProjectController()
        self.__settingsController = SettingsController()
        self.__reportController = ReportController()
        self.__aboutController = AboutController()
        self.__updateController = UpdateController()
        self.__scanController = ScanController(self.__view)
        self.__vulnerabilitiesController = VulnerabilitiesController(self.__view)
        self.__view.buildUI(self.__vulnerabilitiesController.getWidget(), self.__scanController.getWidget())

        self.__view.setController(self)

    def actionAbout(self):
        """This function is executed when actionAbout is clicked."""
        self.__aboutController.show()

    def actionNewProject(self):
        """This function is executed when actionNewProject is clicked."""
        self.__view.setTabFirst()
        if self.__projectController.show():
            projectFile = self.__projectController.getProjectFile()
            self.__view.setEnabledItems(True)
            self.__view.setMessageStatus(self.__projectController.getMessageStatus())
            self.__view.setTitle(projectFile.readValue("Information", "Name"))
            self.__scanController.setProjectFile(projectFile, True)
            self.__vulnerabilitiesController.setProjectFile(projectFile)
            self.__reportController.setProjectFile(projectFile)
            self.__settingsController.setProjectFile(projectFile)

    def actionOpenProject(self):
        """This function is executed when actionOpenProject is clicked."""
        self.__view.setTabFirst()
        if self.__projectController.openProject():
            projectFile = self.__projectController.getProjectFile()
            self.__view.setEnabledItems(True)
            self.__view.setMessageStatus(self.__projectController.getMessageStatus())
            self.__view.setTitle(projectFile.readValue("Information", "Name"))
            self.__scanController.setProjectFile(projectFile, False)
            self.__vulnerabilitiesController.setProjectFile(projectFile)
            self.__reportController.setProjectFile(projectFile)
            self.__settingsController.setProjectFile(projectFile)

    def actionRefreshExploits(self):
        """This function is executed when actionRefreshExploits is clicked."""
        self.__vulnerabilitiesController.refreshExploits()

    def actionReportPDF(self):
        """This function is executed when actionReportPDF is clicked."""
        if self.__reportController.show():
            MessageBox.information("Report PDF", "Your report was saved successfully")

    def actionSave(self):
        """This function is executed when actionSave is clicked."""
        if self.__scanController.save():
            if self.__vulnerabilitiesController.save():
                MessageBox.information("Save", "All changes was saved successfully")

    def actionSettings(self):
        """This function is executed when actionSettings is clicked."""
        projectFile = self.__projectController.getProjectFile()
        self.__settingsController.setProjectFile(projectFile)
        if self.__settingsController.show():
            # if and only if button OK is pushed.
            projectFile = self.__settingsController.getProjectFile()
            self.__projectController.setProjectFile(projectFile)
            self.__view.setMessageStatus(self.__projectController.getMessageStatus())
            self.__view.setTitle(projectFile.readValue("Information", "Name"))
            self.__vulnerabilitiesController.setProjectFile(projectFile)

    def actionUpdate(self):
        """This function is executed when actionUpdate is clicked."""
        self.__updateController.show()

    def start(self):
        """This function is executed when program start"""
        self.__view.show()
