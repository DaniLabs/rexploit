from controllers.projectcontroller import ProjectController
from controllers.scancontroller import ScanController
from controllers.vulnerabilitiescontroller import VulnerabilitiesController
from controllers.welcomecontroller import WelcomeController
from views.mainview import MainView
from views.misc.messagebox import MessageBox


class MainController(object):
    def __init__(self):
        self.mainView = MainView(self)
        self.projectController = ProjectController()
        self.scanController = ScanController(self.mainView)
        self.vulnerabilitiesController = VulnerabilitiesController(self.mainView)

        # This widget is the last one, because appears first
        self.welcomeController = WelcomeController(self.mainView)

        #TODO Hacer un array de los widgets de las diferentes ventanas
        widgets = {self.welcomeController.getWidget(),
                   self.vulnerabilitiesController.getWidget(),
                   self.scanController.getWidget()
                   }

        self.mainView.buildUI(widgets)

    def start(self):
        self.mainView.show()

    def actionHome(self):
        self.mainView.setCentralWidget(self.welcomeController.getWidget())
        print "actionHome"

    def actionNewProject(self):
        if self.projectController.showNewProjectView():
            prjectModel = self.projectController.getProjectModel()
            self.mainView.setMessageStatus(self.projectController.getMessageStatus())
            self.scanController.setProjectModel(prjectModel, True)
            self.welcomeController.setProjectModel(prjectModel)
        else:
            pass

    def actionOpenProject(self):
        if self.projectController.openProject():
            prjectModel = self.projectController.getProjectModel()
            self.mainView.setMessageStatus(self.projectController.getMessageStatus())
            self.scanController.setProjectModel(prjectModel, False)
            self.welcomeController.setProjectModel(prjectModel)
        else:
            pass

    def actionSave(self):
        #TODO actionSave. Guardar los cambios realizados
        if self.scanController.saveTargets():
            MessageBox.information("Save", "All changes save correctly")
        else:
            MessageBox.critical("Error", "An error happened")
        print "actionSave"

    def actionVulnerabilities(self):
        if self.vulnerabilitiesController.start():
            print "yes"
            print self.welcomeController.getRouterActive()
        else:
            print "no"

        #TODO Despues buscar dentro de la carpeta del router las vulnerabilidades disponibles
        print "actionVulnerabilities"

    def actionScan(self):
        print "actionScan"

    def actionSettings(self):
        #TODO actionSettings. Configurar opciones del proyecto. Que opciones.
        print "actionSettings"

    def actionAbout(self):
        #TODO actionAbout. Mostrar informacion sobre el proyecto, version, autores, licencia, etc...
        print "actionAbout"
