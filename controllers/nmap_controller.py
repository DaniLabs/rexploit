from models.nmap_model import NmapModel
from views.nmap_scan_view import NmapScanView


class NmapController(object):
    def __init__(self):
        self.model = NmapModel()
        self.nmap_scan_view = NmapScanView(self)
        self.project_file = None
        self.ip = None

    def get_widget(self):
        return self.nmap_scan_view.get_ui()

    def start_scan(self, ports):
        if self.ip and ports:
            self.model.set_host(self.ip)
            self.model.set_ports(ports)
            self.model.start()
            targets = self.model.get_targets()
            self.nmap_scan_view.set_items(targets)
        else:
            self.nmap_scan_view.error("IP or ports not found")

    def set_project_file(self, project_file):
        self.project_file = project_file
        self.__set_ip()
        self.__load_targets()

    def save_targets(self):
        targets =  self.model.get_targets()
        if targets:
            for i, target in enumerate(targets):
                section = "Target_%s" % i
                value_read_port = self.project_file.read_value(section, "Port")
                if not value_read_port == target.port:
                        self.project_file.write_on_section(section, "Protocol", target.protocol)
                        self.project_file.write_on_section(section, "Port", target.port)
                        self.project_file.write_on_section(section, "Name", target.name)
                        self.project_file.write_on_section(section, "State", target.state)
                        self.project_file.write_on_section(section, "Product", "%s %s" % (target.product, target.version))
                        self.project_file.write_on_section(section, "Extra", target.extra_info)
                else:
                    pass
        else:
            pass

    def __set_ip(self):
        self.ip = str(self.project_file.read_value("Information", "IP"))

    def __load_targets(self):
        i = 0
        items = []
        while self.project_file.has_section("Target_%s" % i):
            items.append(self.project_file.read_section("Target_%s" % i))
            i += 1
        targets = self.model.parse_file(items)
        self.nmap_scan_view.set_items(targets)
