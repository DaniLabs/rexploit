# Imports
from lib.io.dbhelper import DBHelper
from lib.io.projectfile import ProjectFile
from views.dialog.settingsview import SettingsView
from views.misc.messagebox import MessageBox


class SettingsController(object):

    """
        This class is a controller that manages the 'Settings View'.
    """

    def __init__(self):
        """Initialize the controller object and all attributes that it needs"""
        self.__projectFile = None
        self.__view = SettingsView(self)

    @staticmethod
    def getInformation(ip):
        """
        Get information about the IP that receive
        :param ip: IP Address
        :return: MAC, OUI and company
        """
        dbHelper = DBHelper()

        try:
            mac, info = dbHelper.fetchone(ip)
        except EOFError as e:
            MessageBox.critical("Error", str(e))
            return None

        if not mac and not info:
            mac = oui = company = "Unknown"
        else:
            oui = info[1]
            company = info[2]

        return mac, oui, company

    @property
    def projectFile(self):
        """
        Get a project file.
        :return: A project file
        """
        return self.__projectFile

    @projectFile.setter
    def projectFile(self, projectFile):
        """
        Set a project file object
        :param projectFile: a project file object
        :return: None
        """
        self.__projectFile = projectFile

    def setInformation(self):
        data = {'name': self.__projectFile.readValue("Information", "Name"),
                'location': self.__projectFile.readValue("Information", "Location"),
                'IP': self.__projectFile.readValue("Information", "IP"),
                'mac': self.__projectFile.readValue("Information", "MAC"),
                'oui': self.__projectFile.readValue("Information", "OUI"),
                'company': self.__projectFile.readValue("Information", "Company"),
                'router':  self.__projectFile.readValue("Information", "Router")}
        
        self.__view.setInformation(data)

    def save(self, data):
        """
        Save all information about the project.
        :param data: the data that it receive
        :return: None
        """
        if self.__projectFile.readValue("Information", "Name") != data['name']:
            self.__projectFile = ProjectFile(data['location'], data['name'])

        self.__projectFile.write("Information", "Location", data['location'])
        self.__projectFile.write("Information", "Name", data['name'])
        self.__projectFile.write("Information", "IP", data['IP'])
        self.__projectFile.write("Information", "MAC", data['mac'])
        self.__projectFile.write("Information", "OUI", data['oui'])
        self.__projectFile.write("Information", "Company", data['company'])

    def show(self):
        """
        Show 'Settings View'
        :return: True if we click on OK button, False otherwise
        """
        if self.__view.startUi():
            self.setInformation()
            value = self.__view.exec_()

            # Errors
            while value < 0:
                value = self.__view.exec_()
            # OK
            if value > 0:
                return True
            # Cancel
            elif value == 0:
                return False
