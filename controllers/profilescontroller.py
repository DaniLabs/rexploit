# Imports
from lib.io.profile import Profile
from views.dialog.profileview import ProfileView
from views.misc.messagebox import MessageBox


class ProfilesController(object):

    """
        This class is a controller that manages the 'Profiles View' and all action that are related with
        create a new scan profiles.
    """
    
    def __init__(self):
        """Initialize the controller object and all attributes that it needs"""
        self.__view = ProfileView(self)
        self.__profile = Profile()

    def getCommand(self, profile):
        """
        Get the command associates with this
        :param profile: the profile's name
        :return: the command
        """
        try:
            self.__profile.read()
            return self.__profile.getCommand(profile)
        except IOError as e:
            MessageBox.critical("Error", str(e))
            return None

    def getProfiles(self):
        """
        Get all profiles
        :return: a dict with all profiles
        """
        try:
            self.__profile.read()
            return self.__profile.getAll()
        except IOError as e:
            MessageBox.critical("Error", str(e))
            return None

    def removeProfile(self, profile):
        """
        Remove the profile that it receives
        :param profile: the profile that we want to remove
        :return: None
        """
        try:
            self.__profile.read()
            self.__profile.removeProfile(profile)
            return True
        except IOError as e:
            MessageBox.critical("Error", str(e))
            return None

    def show(self):
        """
        Show 'Profiles View'
        :return: True if profile is create successfully, False otherwise
        """
        if self.__view.startUi():
            self.__view.profiles = self.__profile

            value = self.__view.exec_()

            while value < 0:
                value = self.__view.exec_()

            if value > 0:
                return True
            elif value == 0:
                return False
