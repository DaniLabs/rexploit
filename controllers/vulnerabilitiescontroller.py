from importlib import import_module
from os import listdir
from os.path import splitext

from views.misc.messagebox import MessageBox
from views.widgets.vulnerabilitiesview import VulnerabilitiesView


class VulnerabilitiesController(object):
    def __init__(self, parent):
        self.vulnerabilitiesView = VulnerabilitiesView(self, parent)

    def start(self, router, model):
        if not router or not model:
            MessageBox.critical("Error", "You must to choose a router and model")
        else:
            exploits = self.findExploits(router, model)
            if exploits:
                self.vulnerabilitiesView.show()
                self.vulnerabilitiesView.setExploits(exploits)
            else:
                MessageBox.critical("Error", "We can not found exploits for your router")

    def getWidget(self):
        return self.vulnerabilitiesView

    def findExploits(self, router, model):
        exploits = []
        files = [splitext(f)[0]
                 for f in listdir("./modules/{0}".format(router.lower()))
                     if f.endswith(".py")
                     and not f.startswith("__")
                 ]
        files = filter(lambda e: model.lower() in e, files)
        try:
            for exploit in files:
                e = import_module('.{0}.{1}'.format(router.lower(), exploit), 'modules')
                exploits.append(e)
            return exploits
        except ImportError:
            return exploits
