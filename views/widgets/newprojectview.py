import os
from PyQt5.uic import loadUi
from os.path import expanduser

from PyQt5.QtCore import QRegExp
from PyQt5.QtGui import QRegExpValidator, QValidator
from PyQt5.QtWidgets import QDialog

from views.misc.filedialog import FileDialog
from views.misc.messagebox import MessageBox


class NewProjectView(QDialog):
    def __init__(self, projectController):
        super(NewProjectView, self).__init__()
        self.projectController = projectController
        loadUi('./views/ui/widgets/newproject.ui', self)

        self.lineEditLocation.setText(expanduser("~"))
        regex = QRegExp("\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}")
        self.validator = QRegExpValidator(regex, self.lineEditIP)
        self.lineEditIP.setValidator(self.validator)

        # Connect things
        self.buttonCancel.clicked.connect(self.buttonCancelClicked)
        self.buttonCreate.clicked.connect(self.buttonCreateClicked)
        self.buttonBrowse.clicked.connect(self.buttonBrowseClicked)

    def buttonCancelClicked(self):
        self.reject()

    def buttonBrowseClicked(self):
        self.lineEditLocation.setText(FileDialog.getExistingDirectory())

    def buttonCreateClicked(self):
        value = self.checkValues()
        if value == 1:
            self.projectController = self.projectController.createProject(
                    self.lineEditName.text(),
                    self.lineEditIP.text(),
                    self.lineEditLocation.text()
            )
            self.done(1)
        elif value == -1:
            MessageBox.critical("Error", "You must to complete the information")
        elif value == -2:
            MessageBox.critical("Error", "You have to add an IP")
        elif value == -3:
            MessageBox.critical("Error", "Exist a project with same name on this path")

    def checkValues(self):
        if self.lineEditName.text():
            if self.isIP():
                if self.isLocation():
                    return 1
                else:
                    return -3
            else:
                return -2
        else:
            return -1

    def isIP(self):
        # Verify if the IP "matches" the regular expression
        #TODO Falta comprobar que podemos hacer ping a esa IP, es decir que el host esta vivo
        state = self.validator.validate(self.lineEditIP.text(), 0)[0]
        return state == QValidator.Acceptable

    def isLocation(self):
        location = str(self.lineEditLocation.text())
        name = str(self.lineEditName.text())
        path = os.path.join(location, name + ".ini")
        return not os.path.exists(path) and os.access(str(self.lineEditLocation.text()), os.W_OK)
