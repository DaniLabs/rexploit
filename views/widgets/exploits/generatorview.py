from re import compile, IGNORECASE
from views.misc.messagebox import MessageBox
from interfaces.qexploit import QExploit


class GeneratorView(QExploit):
    def __init__(self, parent):
        super(GeneratorView, self).__init__("generator", parent)
        self.category = "generator"

        # Connect buttons
        self.pushButtonGenerate.clicked.connect(self.pushButtonGenerateClicked)

    def check(self):
        mac = self.lineEditMAC.text()
        # Credits http://stackoverflow.com/questions/18782926/regex-to-match-mac-address-and-also-extract-its-values
        regex = compile(r'^([0-9A-F]{1,2})\:([0-9A-F]{1,2})\:([0-9A-F]{1,2})\:([0-9A-F]{1,2})\:([0-9A-F]{1,2})\:([0-9A-F]{1,2})$', IGNORECASE)
        result = regex.match(mac)

        if result:
            return True
        else:
            MessageBox.critical("Error", "You have to set a MAC. Example: '00:11:22:33:44:55'")
            return False

    def pushButtonGenerateClicked(self):
        if self.check():
            mac = self.lineEditMAC.text()
            try:
                data = self.__exploit.run(mac)
            except Exception as e:
                data = e.message

            self.labelOutput.setText(str(data))

    def setExploit(self, exploit):
        self.exploit = exploit
        self.lineEditMAC.setText(self.exploit.mac)
        self.labelOutput.setText("")
