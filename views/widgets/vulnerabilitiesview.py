from PyQt5.uic import loadUi

from PyQt5.QtWidgets import QWidget, QTreeWidgetItem
from PyQt5.QtGui import QBrush, QColor
from PyQt5.QtCore import Qt

from views.exploits.credentialsbydefaultview import CredentialsByDefaultView
from views.exploits.authenticationbypass import AuthenticationBypassView
from views.exploits.generatorview import GeneratorView
from views.exploits.localfileinclusionview import LocalFileInclusionView
from views.misc.messagebox import MessageBox


class VulnerabilitiesView(QWidget):
    def __init__(self, vulnerabilitiesController, parent):
        super(VulnerabilitiesView, self).__init__(parent)
        self.vulnerabilitiesController = vulnerabilitiesController
        self.exploits = {}
        loadUi('./stuff/ui/widgets/vulnerabilities.ui', self)

        # Connect thing
        self.treeWidget.itemClicked.connect(lambda x: self.treeWidgetItemClicked(self.treeWidget.currentItem()))
        self.comboBoxRouter.currentIndexChanged.connect(self.comboBoxRouterChanged)
        self.pushButtonAutoCheck.clicked.connect(self.pushButtonAutoCheckClicked)

        # Add widgets
        localFileInclusionView = LocalFileInclusionView(self)
        credentialsByDefaultView = CredentialsByDefaultView(self)
        generatorView = GeneratorView(self)
        authenticationBypassView = AuthenticationBypassView(self)
        self.stackedWidget.addWidget(localFileInclusionView)
        self.stackedWidget.addWidget(credentialsByDefaultView)
        self.stackedWidget.addWidget(generatorView)
        self.stackedWidget.addWidget(authenticationBypassView)

        self.horizontalLayout.addWidget(self.stackedWidget)

        # Set gridLayout. It's resize the widget
        self.setLayout(self.gridLayout)

    def comboBoxRouterChanged(self):
        self.stackedWidget.setCurrentIndex(0)
        self.treeWidget.clear()
        self.exploits = {}
        self.vulnerabilitiesController.start(self.getRouterActive())

    def findExploit(self, name):
        for key, value in self.exploits.iteritems():
            if name in key:
                return value

    def getRouterActive(self):
        router = self.comboBoxRouter.currentText()
        if "None" in router:
            return None
        else:
            return router

    def pushButtonAutoCheckClicked(self):
        root = self.treeWidget.invisibleRootItem()
        child_count = root.childCount()
        success = 0
        fail = 0
        for i in range(child_count):
            item = root.child(i)
            if self.exploits[item.text(0)].check():
                success += 1
                item.setForeground(0, QBrush(QColor(Qt.green)))
            else:
                fail += 1
                item.setForeground(0, QBrush(QColor(Qt.red)))

        self.labelCheck.setText("Result: {0} OK - {1} Fail".format(success, fail))

    def saveExploits(self):
        # TODO Falta hacer esta funcion de guardar los exploits de dicho router
        pass

    def setEnabledItems(self, b):
        self.comboBoxRouter.setEnabled(b)
        self.pushButtonAutoCheck.setEnabled(b)

    def setExploits(self, exploits):
        for exploit in exploits:
            item = QTreeWidgetItem(self.treeWidget.invisibleRootItem())
            name = exploit.getName()
            item.setText(0, name)
            # Create a dict like {name:exploit}
            self.exploits[name] = exploit

    def setStackedWidget(self, item):
        # Try to find a exploits related with this name
        exploit = self.findExploit(item)

        for i in range(1, self.stackedWidget.count()):
            widget = self.stackedWidget.widget(i)
            # Compare categories
            if widget.getCategory() in exploit.getCategory():
                widget.setExploit(exploit)
                self.stackedWidget.setCurrentIndex(i)
                return

    def setModels(self, models):
        if models:
            for model in models:
                self.comboBoxModel.addItem(str(model))
        else:
            MessageBox.critical("Error", "We can not found models for this router. Try to choose other router.")

    def setRouters(self, routers):
        for router in routers:
            self.comboBoxRouter.addItem(str(router))

    def treeWidgetItemClicked(self, item):
        self.stackedWidget.show()
        self.setStackedWidget(item.text(0))
