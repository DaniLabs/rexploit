from PyQt5.uic import loadUi

from PyQt5.QtWidgets import QWidget, QTreeWidgetItem

from lib.vulnerabilities.vulnerabilities import vulnerabilities
from views.exploits.localfileinclusionview import LocalFileInclusionView

class VulnerabilitiesView(QWidget):
    def __init__(self, vulnerabilitiesController, parent):
        super(VulnerabilitiesView, self).__init__(parent)
        self.vulnerabilitiesController = vulnerabilitiesController
        self.exploits = {}
        self.IP = None
        loadUi('./views/ui/widgets/vulnerabilities.ui', self)

        # Connect thing
        self.treeWidget.itemClicked.connect(lambda x : self.treeWidgetItemClicked(self.treeWidget.currentItem()))

        # Stack 1 LocalFileInclusionView
        localFileInclusionView = LocalFileInclusionView(self)
        self.stackedWidget.addWidget(localFileInclusionView)

        self.horizontalLayout.addWidget(self.stackedWidget)

        # Set verticalLayout. It's resize the widget
        self.setLayout(self.horizontalLayout)

    def treeWidgetItemClicked(self, item):
        self.stackedWidget.show()
        if item.parent():
            self.setStackedWidget(item.parent().text(0), item.text(0))

    def setStackedWidget(self, parent, child):
        exploit = self.findExploit(child)
        for i in range(1, self.stackedWidget.count()):
            widget = self.stackedWidget.widget(i)
            if widget.getName() in parent:
                widget.setExploit(exploit)
                self.stackedWidget.setCurrentIndex(i)
                pass

    def findExploit(self, name):
        for key, value in self.exploits.iteritems():
            if name in key:
                return value

    def setExploits(self, exploits):
        if not self.exploits:
            self.addExploits(exploits)

    def getParent(self, vulnerability):
        for i in xrange(self.treeWidget.topLevelItemCount()):
            item = self.treeWidget.topLevelItem(i)
            if vulnerability.upper() in item.text(0):
                return item

        for v in vulnerabilities:
            if vulnerability.upper() in v:
                item = QTreeWidgetItem(self.treeWidget)
                item.setText(0, v)
                return item

    def addExploits(self, exploits):
        for exploit in exploits:
            parent = self.getParent((exploit.file).split("_")[0].upper())
            item = QTreeWidgetItem(parent)
            item.setText(0, exploit.name)
            self.exploits[exploit.name] = exploit
