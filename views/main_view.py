from PyQt4 import QtGui

from gen.ui_main import UiMainWindow


class MainView(QtGui.QMainWindow):

    def __init__(self, main_controller):
        super(MainView, self).__init__()
        self.main_controller = main_controller
        self.ui = None
        self.widget_active = None
        self.build_ui()

    def build_ui(self):
        self.ui = UiMainWindow()
        self.ui.setup_ui(self)
        self.ui.treeWidget.itemClicked.connect(lambda: self.printer(self.ui.treeWidget.currentItem()))
        self.ui.actionNew_project.triggered.connect(self.action_new_project)
        self.ui.actionOpen_project.triggered.connect(self.action_open_project)
        self.ui.actionScan.triggered.connect(self.action_scan)

    def printer(self, item):
        print item.text(0)

    def action_scan(self):
        self.main_controller.action_scan()

    def action_new_project(self):
        self.main_controller.action_new_project()

    def action_open_project(self):
        self.main_controller.action_open_project()

    def set_message_statusbar(self, message):
        self.ui.statusbar.showMessage(message)

    def load_central_widget(self, widget):
        if self.widget_active is widget:
            pass
        elif self.widget_active:
            self.ui.verticalLayout.removeWidget(self.widget_active)
            self.widget_active.deleteLater()

        self.widget_active = widget
        self.ui.verticalLayout.addWidget(widget)
        self.ui.frame.setLayout(self.ui.verticalLayout)

        # def closeEvent(self, event):
        #     result = QtGui.QMessageBox.question(self,
        #                                         "Confirm Exit",
        #                                         "Are you sure you want to exit ?",
        #                                         QtGui.QMessageBox.Yes | QtGui.QMessageBox.No)
        #     event.ignore()
        #     if result == QtGui.QMessageBox.Yes:
        #         event.accept()
