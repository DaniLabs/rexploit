from PyQt5.uic import loadUi
from os import W_OK, access
from os.path import expanduser, join, exists

from PyQt5.QtCore import QRegExp
from PyQt5.QtGui import QRegExpValidator, QValidator
from PyQt5.QtWidgets import QDialog

from views.misc.filedialog import FileDialog
from views.misc.messagebox import MessageBox


class NewProjectView(QDialog):
    def __init__(self, projectController):
        super(NewProjectView, self).__init__()
        self.projectController = projectController
        loadUi('./views/ui/dialog/newproject.ui', self)

        self.lineEditLocation.setText(expanduser("~"))
        regex = QRegExp("\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}")
        self.validator = QRegExpValidator(regex, self.lineEditIP)
        self.lineEditIP.setValidator(self.validator)

        # Connect things
        self.buttonBox.rejected.connect(self.buttonBoxRejected)
        self.buttonBox.accepted.connect(self.buttonBoxAccepted)
        self.toolButton.clicked.connect(self.toolButtonClicked)
        self.pushButtonPing.clicked.connect(self.pushButtonPingClicked)

        # Disabled button OK
        buttons = self.buttonBox.buttons()
        buttons[0].setEnabled(False)

    def buttonBoxAccepted(self):
        value = self.checkValues()
        if value == 1:
            self.projectController = self.projectController.createProject(
                    self.lineEditName.text(),
                    self.lineEditIP.text(),
                    self.lineEditLocation.text()
            )
            self.accept()
            self.done(value)
        elif value == -1:
            MessageBox.critical("Error", "You must to complete the information")
            self.done(value)
        elif value == -2:
            MessageBox.critical("Error", "You have to add an IP")
            self.done(value)
        elif value == -3:
            MessageBox.critical("Error", "Exist a project with same name on this path")
            self.done(value)

    def buttonBoxRejected(self):
        self.reject()

    def checkValues(self):
        if self.isName():
            if self.isIP():
                if self.isLocation():
                    return 1
                else:
                    return -3
            else:
                return -2
        else:
            return -1

    def isLocation(self):
        location = str(self.lineEditLocation.text())
        name = str(self.lineEditName.text())
        path = join(location, name + ".ini")
        return not exists(path) and access(str(self.lineEditLocation.text()), W_OK)

    def isName(self):
        if self.lineEditName.text():
            return True
        else:
            return False

    def isIP(self):
        # Verify if the IP "matches" the regular expression
        state = self.validator.validate(self.lineEditIP.text(), 0)[0]
        return state == QValidator.Acceptable

    def pushButtonPingClicked(self):
        if self.projectController.isAlive(self.lineEditIP.text()):
            buttons = self.buttonBox.buttons()
            buttons[0].setEnabled(True)
            return True
        else:
            buttons = self.buttonBox.buttons()
            buttons[0].setEnabled(False)
            MessageBox.critical("Error", "Destination Host Unreachable")
            return False

    def toolButtonClicked(self):
        self.lineEditLocation.setText(FileDialog.getExistingDirectory())
