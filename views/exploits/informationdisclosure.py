from PyQt5.uic import loadUi
from PyQt5.QtCore import Qt
from PyQt5.QtWidgets import QWidget
from views.misc.messagebox import MessageBox
from lib.io.network import ping
from lib.io.parse import CWEToLink


class InformationDisclosureView(QWidget):
    def __init__(self, parent):
        super(InformationDisclosureView, self).__init__(parent)
        loadUi('./resources/ui/exploits/informationdisclosure.ui', self)
        self.__exploit = None
        self.__category = "disclosure"
         
        self.__parent = parent

        # Connect buttons
        self.pushButtonExploit.clicked.connect(self.pushButtonExploitClicked)
        self.pushButtonCheck.clicked.connect(self.pushButtonCheckClicked)
        self.checkBoxVulnerable.stateChanged.connect(self.checkBoxVulnerableStateChanged)
        self.labelAuthor.setTextInteractionFlags(Qt.TextSelectableByMouse)
        self.labelDate.setTextInteractionFlags(Qt.TextSelectableByMouse)
        self.labelTarget.setTextInteractionFlags(Qt.TextSelectableByMouse)
        self.labelDescription.setTextInteractionFlags(Qt.TextSelectableByMouse)
        self.labelDescription.setWordWrap(True)

        self.labelCWE.setTextFormat(Qt.RichText)
        self.labelCWE.setTextInteractionFlags(Qt.TextBrowserInteraction)
        self.labelCWE.setOpenExternalLinks(True)

        self.labelReferences.setTextFormat(Qt.RichText)
        self.labelReferences.setTextInteractionFlags(Qt.TextBrowserInteraction)
        self.labelReferences.setOpenExternalLinks(True)

        # Set verticalLayout. It's resize the widget
        self.setLayout(self.verticalLayout)

    def check(self):
        if ping(self.__exploit.ip):
            return True
        else:
            MessageBox.critical("Error", "Destination Host Unreachable")
            return False

    def checkBoxVulnerableStateChanged(self):
        if self.checkBoxVulnerable.isChecked():
            self.__parent.addExploitSuccess(self.__exploit)
        else:
            self.__parent.removeExploitSuccess(self.__exploit)

    def getCategory(self):
        return self.__category

    def pushButtonCheckClicked(self):
        if self.check():
            if self.__exploit.check():
                self.__exploit.vulnerable =  True
                self.setCheckBoxVulnerableChecked()
            else:
                self.plainTextEditData.appendPlainText("")
                self.plainTextEditData.appendPlainText("Error. The target is not vulnerable")

    def pushButtonExploitClicked(self):
        self.plainTextEditData.clear()
        try:
            data = self.__exploit.default()
            result = self.__exploit.run(data)
            self.plainTextEditData.appendPlainText(result)
            if self.__exploit.vulnerable:
                self.setCheckBoxVulnerableChecked()
        except Exception as e:
            MessageBox.critical("Error", str(e.args))

    def setCheckBoxVulnerableChecked(self, checked=True):
        if checked:
            self.checkBoxVulnerable.setCheckState(Qt.Checked)
        else:
            self.checkBoxVulnerable.setCheckState(Qt.Unchecked)

    def setExploit(self, exploit):
        self.__exploit = exploit
        self.labelNameExploit.setText(self.__exploit.name)
        self.labelAuthor.setText(self.__exploit.authors)
        self.labelDate.setText(self.__exploit.date)
        link = CWEToLink(self.__exploit.cwe)
        self.labelCWE.setText(link)
        self.labelTarget.setText(self.__exploit.target)
        self.labelReferences.setText(self.__exploit.references)
        self.labelDescription.setText(self.__exploit.description)
        self.plainTextEditData.clear()
        default = self.__exploit.default()
        if default:
            self.labelURL.setText(default["url"])
        else:
            self.labelURL.setText("None")
