from PyQt5.uic import loadUi

from PyQt5.QtWidgets import QWidget

from views.misc.messagebox import MessageBox


class LocalFileInclusionView(QWidget):
    def __init__(self, parent):
        super(LocalFileInclusionView, self).__init__(parent)
        loadUi('./views/ui/exploits/localfileinclusion.ui', self)
        self.exploit = None
        self.name = "Local File Inclusion"

        # Connect buttons
        self.pushButtonExploit.clicked.connect(self.pushButtonExploitClicked)

        # Set verticalLayout. It's resize the widget
        self.setLayout(self.verticalLayout)

    def getName(self):
        return self.name

    def setExploit(self, exploit):
        self.exploit = exploit
        self.labelNameExploit.setText(self.exploit.name)
        self.labelAuthor.setText(self.exploit.authors)
        self.labelDate.setText(self.exploit.date)
        self.labelVerify.setText(self.exploit.verify)
        self.labelReferences.setText(self.exploit.references)
        self.textBrowserDescription.append(self.exploit.description)

    def pushButtonExploitClicked(self):
        path = self.lineEditPath.text()
        self.textBrowserData.clearHistory()
        if path:
            data = self.exploit.run(path)
            self.textBrowserData.append(data)
        else:
            MessageBox.critical("Error", "You must add a path")

