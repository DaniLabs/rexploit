from PyQt5.uic import loadUi

from PyQt5.QtCore import Qt
from PyQt5.QtWidgets import QWidget

from views.misc.messagebox import MessageBox


class LocalFileInclusionView(QWidget):
    def __init__(self, parent):
        super(LocalFileInclusionView, self).__init__(parent)
        loadUi('./views/ui/exploits/localfileinclusion.ui', self)
        self.exploit = None
        self.category = "lfi"

        # Connect buttons
        self.pushButtonExploit.clicked.connect(self.pushButtonExploitClicked)
        self.labelAuthor.setTextInteractionFlags(Qt.TextSelectableByMouse)
        self.labelDate.setTextInteractionFlags(Qt.TextSelectableByMouse)
        self.labelCWE.setTextInteractionFlags(Qt.TextSelectableByMouse)
        self.labelCVE.setTextInteractionFlags(Qt.TextSelectableByMouse)
        self.labelReferences.setTextInteractionFlags(Qt.TextSelectableByMouse)
        self.labelDescription.setTextInteractionFlags(Qt.TextSelectableByMouse)
        self.labelDescription.setWordWrap(True)

        # Set verticalLayout. It's resize the widget
        self.setLayout(self.verticalLayout)

    def check(self):
        path = self.lineEditPath.text()
        if not path.startswith("/"):
            MessageBox.critical("Error", "An absolute path is required. Example: '/etc/defaultcfg.xml'")
            return False

        return True

    def getCategory(self):
        return self.category

    def pushButtonExploitClicked(self):
        path = self.lineEditPath.text()
        self.plainTextEditData.clear()
        if self.check():
            data = self.exploit.run(path)
            self.plainTextEditData.appendPlainText(data)

    def setExploit(self, exploit):
        self.exploit = exploit
        self.labelNameExploit.setText(self.exploit.getName())
        self.labelAuthor.setText(self.exploit.getAuthors())
        self.labelDate.setText(self.exploit.getDate())
        self.labelCWE.setText(self.exploit.getCWE())
        self.labelCVE.setText(self.exploit.getCVE())
        self.labelReferences.setText(self.exploit.getReferences())
        self.labelDescription.setText(self.exploit.getDescription())
