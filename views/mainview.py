from PyQt5.uic import loadUi

from PyQt5.QtWidgets import QMainWindow

from views.resources.resource import qInitResources
from views.misc.messagebox import MessageBox


class MainView(QMainWindow):
    def __init__(self, parent=None):
        super(MainView, self).__init__(parent)
        qInitResources()
        loadUi('./resources/ui/mainwindow.ui', self)
        self.__mainController = None

        # Disable buttons and combobox
        self.setEnabledItems(False)

    def actionAboutClicked(self):
        self.__mainController.actionAbout()

    def actionNewProjectClicked(self):
        self.__mainController.actionNewProject()

    def actionOpenProjectClicked(self):
        self.__mainController.actionOpenProject()

    def actionReportPDFClicked(self):
        self.__mainController.actionReportPDF()

    def actionSaveClicked(self):
        self.__mainController.actionSave()

    def actionSettingsClicked(self):
        self.__mainController.actionSettings()

    def actionUpdateClicked(self):
        self.__mainController.actionUpdate()

    def buildUI(self, vulnerabilitiesWidget, scanWidget):
        self.tabWidget.addTab(vulnerabilitiesWidget, "Exploits")
        self.tabWidget.addTab(scanWidget, "Scan")

        # Connect buttons
        self.actionAbout.triggered.connect(self.actionAboutClicked)
        self.actionNewProject.triggered.connect(self.actionNewProjectClicked)
        self.actionOpenProject.triggered.connect(self.actionOpenProjectClicked)
        self.actionReportPDF.triggered.connect(self.actionReportPDFClicked)
        self.actionSave.triggered.connect(self.actionSaveClicked)
        self.actionSettings.triggered.connect(self.actionSettingsClicked)
        self.actionUpdate.triggered.connect(self.actionUpdateClicked)

    def closeEvent(self, event):
        if MessageBox.question("Confirm Exit", "Are you sure you want to exit ?"):
            event.accept()
        else:
            event.ignore()

    def setController(self, mainController):
        self.__mainController = mainController

    def setEnabledItems(self, b):
        self.actionSave.setEnabled(b)
        self.actionSettings.setEnabled(b)
        self.actionReportPDF.setEnabled(b)

    def setMessageStatus(self, message):
        self.statusbar.showMessage(message)

    def setTitle(self, name):
        self.setWindowTitle("{0} - {1}".format(self.windowTitle().split("-")[0][:-1], name))
