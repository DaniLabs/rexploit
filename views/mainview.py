# Imports
from PyQt5.uic import loadUi
from PyQt5.QtWidgets import QMainWindow
from views.resources.resource import qInitResources
from views.misc.messagebox import MessageBox


class MainView(QMainWindow):

    """
        This class is a view inherit from QMainWindow. This class is the main view.
    """

    def __init__(self, mainController):

        """Initialize the view object and all attributes that it needs"""
        super(MainView, self).__init__()
        qInitResources()
        loadUi('./resources/ui/mainwindow.ui', self)
        self.__mainController = mainController

        # Disable buttons
        self.setEnabledItems(False)

    def actionAboutClicked(self):
        """This function is executed when actionAbout is clicked."""
        self.__mainController.actionAbout()

    def actionNewProjectClicked(self):
        """This function is executed when actionNewProject is clicked."""
        self.__mainController.actionNewProject()

    def actionOpenProjectClicked(self):
        """This function is executed when actionOpenProject is clicked."""
        self.__mainController.actionOpenProject()

    def actionRefreshExploitsClicked(self):
        """This function is executed when actionRefreshExploits is clicked."""
        self.__mainController.actionRefreshExploits()

    def actionReportPDFClicked(self):
        """This function is executed when actionReportPDF is clicked."""
        self.__mainController.actionReportPDF()

    def actionSaveClicked(self):
        """This function is executed when actionSave is clicked."""
        self.__mainController.actionSave()

    def actionSettingsClicked(self):
        """This function is executed when actionSave is clicked."""
        self.__mainController.actionSettings()

    def actionUpdateClicked(self):
        """This function is executed when actionSave is clicked."""
        self.__mainController.actionUpdate()

    def buildUI(self, widgets):
        """
        Build the main view and connect all functions
        :param widgets: a dict with all tabs
        :return: None
        """
        for key, value in widgets.iteritems():
            # key is name, value is the object
            self.tabWidget.addTab(value, key)

        # Connect buttons
        self.actionAbout.triggered.connect(self.actionAboutClicked)
        self.actionNewProject.triggered.connect(self.actionNewProjectClicked)
        self.actionOpenProject.triggered.connect(self.actionOpenProjectClicked)
        self.actionRefreshExploits.triggered.connect(self.actionRefreshExploitsClicked)
        self.actionReportPDF.triggered.connect(self.actionReportPDFClicked)
        self.actionSave.triggered.connect(self.actionSaveClicked)
        self.actionSettings.triggered.connect(self.actionSettingsClicked)
        self.actionUpdate.triggered.connect(self.actionUpdateClicked)

    def closeEvent(self, event):
        """This function is executed when main window will close."""
        if MessageBox.question("Confirm Exit", "Are you sure you want to exit ?"):
            event.accept()
        else:
            event.ignore()

    def setEnabledItems(self, b):
        """
        Enabled or disabled some gui's elements
        :param b: False or True
        :return: None
        """
        self.actionSave.setEnabled(b)
        self.actionSettings.setEnabled(b)
        self.actionRefreshExploits.setEnabled(b)
        self.actionReportPDF.setEnabled(b)

    def setMessageStatus(self, message):
        """
        Set a message status on statusbar
        :param message: the text
        :return: None
        """
        self.statusbar.showMessage(message)

    def setTabIndex(self, i=0):
        """
        Set the tab with index n
        :param i: index of tab
        :return: None
        """
        if self.tabWidget.currentIndex() != i:
            self.tabWidget.setCurrentIndex(i)

    def setTitle(self, text):
        """
        Set a window title
        :param text: the text
        :return: None
        """
        self.setWindowTitle("{0} - {1}".format(self.windowTitle().split("-")[0][:-1], text))
