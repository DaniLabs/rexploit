from PyQt5.uic import loadUi

from PyQt5.QtWidgets import QMainWindow

from views.resources.resource import qInitResources

class MainView(QMainWindow):
    def __init__(self, parent=None):
        super(MainView, self).__init__(parent)
        qInitResources()
        loadUi('./views/ui/mainwindow.ui', self)
        self.mainController = None

    def actionAboutClicked(self):
        self.mainController.actionAbout()

    # def closeEvent(self, event):
    #     result = QtGui.QMessageBox.question(self,
    #                                         "Confirm Exit",
    #                                         "Are you sure you want to exit ?",
    #                                         QtGui.QMessageBox.Yes | QtGui.QMessageBox.No)
    #     event.ignore()
    #     if result == QtGui.QMessageBox.Yes:
    #         event.accept()

    def actionNewProjectClicked(self):
        self.mainController.actionNewProject()

    def actionOpenProjectClicked(self):
        self.mainController.actionOpenProject()

    def actionSaveClicked(self):
        self.mainController.actionSave()

    def actionSettingsClicked(self):
        self.mainController.actionSettings()

    def buildUI(self, vulnerabilitiesWidget, scanWidget):
        self.tabWidget.addTab(vulnerabilitiesWidget, "Vulnerabilities")
        self.tabWidget.addTab(scanWidget, "Scan ports")

        # Connect buttons
        self.actionNewProject.triggered.connect(self.actionNewProjectClicked)
        self.actionOpenProject.triggered.connect(self.actionOpenProjectClicked)
        self.actionSave.triggered.connect(self.actionSaveClicked)
        self.actionSettings.triggered.connect(self.actionSettingsClicked)
        self.actionAbout.triggered.connect(self.actionAboutClicked)

    def setController(self, mainController):
        self.mainController = mainController

    def setEnableddWidgets(self):
        self.actionSave.setDisabled(False)

    def setMessageStatus(self, message):
        self.statusbar.showMessage(message)
