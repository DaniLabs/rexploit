from PyQt4 import QtGui, QtCore

from gen.ui_nmap_scan import UiNmapScan


class NmapScanView(QtGui.QMainWindow):
    def __init__(self, nmap_controller):
        super(NmapScanView, self).__init__()
        self.nmap_controller = nmap_controller
        self.ui = None
        self.build_ui()

    def build_ui(self):
        self.ui = UiNmapScan()
        self.ui.setup_ui()
        self.ui.pushButton_scan.clicked.connect(self.__start_scan)

    def get_ui(self):
        return self.ui

    def set_items(self, targets):
        self.ui.tableWidget.setRowCount(len(targets))
        for row, target in enumerate(targets):
            self.__add_item(row,
                            target.protocol,
                            target.port,
                            target.name,
                            target.state,
                            "%s %s" % (target.product, target.version),
                            target.extra_info)

        self.ui.tableWidget.resizeColumnsToContents()
        self.ui.tableWidget.resizeRowsToContents()
        self.ui.tableWidget.sortItems(1, QtCore.Qt.AscendingOrder)
        self.ui.tableWidget.setSortingEnabled(True)
        self.__status_scan("Scan completed. Found %s ports" % len(targets))

    def error(self, message):
        QtGui.QMessageBox.critical(self, "Error", message)

    def __start_scan(self):
        self.nmap_controller.start_scan(str(self.ui.lineEdit_ports.text()))

    def __status_scan(self, text):
        self.ui.label_status.setText(text)

    def __add_item(self, row, protocol, port, name, state, product, extra_info):
        icon = QtGui.QIcon()

        if state in ["filtered", "closed"]:
            icon.addPixmap(QtGui.QPixmap("./views/resources/icons/no.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        else:
            icon.addPixmap(QtGui.QPixmap("./views/resources/icons/yes.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)

        self.ui.tableWidget.setVerticalHeaderItem(row, QtGui.QTableWidgetItem(icon, ""))

        item = QtGui.QTableWidgetItem(protocol)
        item.setFlags(QtCore.Qt.ItemIsEnabled)
        self.ui.tableWidget.setItem(row, 0, item)

        item = QtGui.QTableWidgetItem(str(port))
        item.setFlags(QtCore.Qt.ItemIsEnabled)
        self.ui.tableWidget.setItem(row, 1, item)

        item = QtGui.QTableWidgetItem(name)
        item.setFlags(QtCore.Qt.ItemIsEnabled)
        self.ui.tableWidget.setItem(row, 2, item)

        item = QtGui.QTableWidgetItem(state)
        item.setFlags(QtCore.Qt.ItemIsEnabled)
        self.ui.tableWidget.setItem(row, 3, item)

        item = QtGui.QTableWidgetItem(product)
        item.setFlags(QtCore.Qt.ItemIsEnabled)
        self.ui.tableWidget.setItem(row, 4, item)

        item = QtGui.QTableWidgetItem(extra_info)
        item.setFlags(QtCore.Qt.ItemIsEnabled)
        self.ui.tableWidget.setItem(row, 5, item)
